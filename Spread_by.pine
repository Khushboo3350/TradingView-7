//@version=4
study(title="Spread by", overlay=true)

//inputs
ls = input(false, title="Log-space")
mode = input(title="Basis", defval="Median", options=["Mean", "Median", "Trimean", "Midhinge", "Midrange", "RMS", "Geometric Mean", "Harmonic Mean"])
type = input(title="Type", defval="Average Deviation", options=["Standard Deviation", "Average Deviation", "Midpoint", "GStDev", "HStDev"])
source = input(close)
length = input(100)
src = ls == true?log(source):source


//functions
pine_harmonic_mean(x, y) =>
    sum = 0.0
    for i = 0 to y - 1
        sum := sum + 1/x[i]
    y/sum

pine_geometric_mean(x, y) =>
    prod = 1.0
    for i = 0 to y - 1
        prod := prod * x[i]
    pow(prod, 1/y)
    
pine_quadratic_mean(x, y) =>
    sum = 0.0
    for i = 0 to y - 1
        sum := sum + pow(x[i], 2)
    sqrt(sum/y)

//descriptors    
mean = sma(src, length)
harmonic_mean = pine_harmonic_mean(src, length)
geometric_mean = pine_geometric_mean(src, length)
rms = pine_quadratic_mean(src, length) 
p10 = percentile_nearest_rank(src, length, 10)
p25 = percentile_nearest_rank(src, length, 25)
median = percentile_nearest_rank(src, length, 50)
p75 = percentile_nearest_rank(src, length, 75)
p90 = percentile_nearest_rank(src, length, 90)
min = lowest(src, length)
max = highest(src, length)
midrange = (min + max)/2
trimean = (p25 + median * 2 + p75)/4
midhinge = (p25 + p75)/2
range = max - min
midpoint = range/4

pine_gstdev(x, y) =>
    sum = 0.0
    for i = 0 to y - 1
        sum := sum + pow(log(x[i] / geometric_mean), 2)
    exp(sqrt(sum/y))

pine_hstdev(x, y) =>
    sum = 0.0
    for i = 0 to y - 1
        sum := sum + pow(pow(x[i], -1) - pow(harmonic_mean, -1), 2)
    pow(sqrt(sum/y), -1)
    
pine_avgdev(x, y, b) =>
    sum = 0.0
    for i = 0 to y - 1
        sum := sum + abs(x[i] - b)
    sum/y

pine_stdev(x, y, b) =>
    sum = 0.0
    for i = 0 to y - 1
        sum := sum + abs(x[i] - b) * abs(x[i] - b)
    sqrt(sum/y)
    
basis = if mode == "Mean"
    basis = mean
else if mode == "Harmonic Mean"
    basis = harmonic_mean
else if mode == "Trimean"
    basis = trimean
else if mode == "Midhinge"
    basis = midhinge
else if mode == "Midrange"
    basis = midrange
else if mode == "RMS"
    basis = rms
else
    basis = median

    
dev = if type == "Standard Deviation" 
    dev = pine_stdev(src, length, basis)
else if type == "Average Deviation"
    dev = pine_avgdev(src, length, basis)
else if type == "Midpoint"
    dev = midpoint
else if type == "GStDev"
    dev = pine_gstdev(src, length)
else if type == "HStDev"
    dev = pine_hstdev(src, length)
    

///ACTUAL DEVS////////////////////

////////////////// des   DEVS DEVS des//////////////////

lower_dev1 = if type == "GStDev"
    lower_dev1 = basis / dev
else if type == "HStDev"
    lower_dev1 = pow(pow(basis, -1) - pow(dev, -1), -1)
else if type == "Midpoint"
    lower_dev1 = basis - dev
else
    lower_dev1 = basis - dev
upper_dev1 = if type == "GStDev"
    upper_dev1 = basis * dev
else if type == "HStDev"
    upper_dev1 = pow(pow(basis, -1) + pow(dev, -1), -1)
else if type == "Midpoint"
    upper_dev1 = basis + dev
else
    upper_dev1 = basis + dev
    
lower_dev2 = if type == "GStDev"
    lower_dev2 = basis / dev / dev
else if type == "HStDev"
    lower_dev2 = pow(pow(basis, -1) - pow(dev, -1) - pow(dev, -1), -1)
else if type == "Midpoint"
    lower_dev2 = basis - dev
else
    lower_dev2 = basis - dev * 2
upper_dev2 = if type == "GStDev"
    upper_dev2 = basis * dev * dev
else if type == "HStDev"
    upper_dev2 = pow(pow(basis, -1) + pow(dev, -1) + pow(dev, -1), -1)
else if type == "Midpoint"
    upper_dev2 = basis + dev
else
    upper_dev2 = basis + dev * 2
    
lower_dev3 = if type == "GStDev"
    lower_dev3 = basis / dev / dev / dev
else if type == "HStDev"
    lower_dev3 = pow(pow(basis, -1) - pow(dev, -1) - pow(dev, -1) - pow(dev, -1), -1)
else if type == "Midpoint"
    lower_dev3 = basis - dev
else
    lower_dev3 = basis - dev * 3
upper_dev3 = if type == "GStDev"
    upper_dev3 = basis * dev * dev * dev
else if type == "HStDev"
    upper_dev3 = pow(pow(basis, -1) + pow(dev, -1) + pow(dev, -1) + pow(dev, -1), -1)
else if type == "Midpoint"
    upper_dev3 = basis + dev
else
    upper_dev3 = basis + dev * 3

//plotting
plot(ls == true?exp(lower_dev3):lower_dev3, color=#787B86, title="Lower dev 3")
plot(ls == true?exp(lower_dev2):lower_dev2, color=#2196F3, title="Lower dev 2")
plot(ls == true?exp(lower_dev1):lower_dev1, color=#2196F3, title="Lower dev 1")
plot(ls == true?exp(basis):basis, color=#9C27B0, title="Basis")
plot(ls == true?exp(upper_dev1):upper_dev1, color=#2196F3, title="Upper dev 1")
plot(ls == true?exp(upper_dev2):upper_dev2, color=#2196F3, title="Upper dev 2")
plot(ls == true?exp(upper_dev3):upper_dev3, color=#787B86, title="Upper dev 3")

plot(0, color=#FFFFFF, title="NA", transp=100)

plot(range/dev, color=#9C27B0, title="Range/Spread", transp=100)
plot(pow(dev, 2), color=#9C27B0, title="Variance", transp=100)
